Error[101]|Error[101]|Error[101]|GPU Instancer can not find a Camera with the tag "MainCamera" or a Camera with GPUICamera component.|
Error[102]|Error[102]|Error[102]|<size=13><b>Frame rates might drop</b></size>\nWhen "Show Visibility" option is enabled, there will be frequent editor updates and data readback from GPU.|
Error[103]|Error[103]|Error[103]|<size=13><b>Low Instance Counts</b></size>\nWhen using the Prefab Manager in your scene, the best practice is to add the distinctively repeating prefabs in the scene to the manager as prototypes. Using GPUI for prototypes with very low instance counts is not recommended.|https://wiki.gurbu.com/index.php?title=GPU_Instancer_Pro:BestPractices#Instance_Counts
Error[104]|Error[104]|Error[104]|<size=13><b>Too Many Prototypes</b></size>\nConsider lowering the number of prototypes. When using the Prefab Manager, add only the prefabs that have high instance counts to the manager, and minimize the amount of the prototypes as much as possible.|https://wiki.gurbu.com/index.php?title=GPU_Instancer_Pro:BestPractices#Instance_Counts
Error[105]|Error[105]|Error[105]|<size=13><b>Container Prefab</b></size>\nConsider lowering the number of renderers for the prototypes. When applicable, create nested prefabs for repeating renderers and use them as prototypes.|https://wiki.gurbu.com/index.php?title=GPU_Instancer_Pro:BestPractices#A_Single_Container_Prefab_vs_Many_prefabs
Error[1001]|Error[1001]|Error[1001]|Prefab reference is null!|
Error[1002]|Error[1002]|Error[1002]|GPUI LOD Group Data reference is null!|
Error[1003]|Error[1003]|Error[1003]|Mesh reference is null!|
Error[1004]|Error[1004]|Error[1004]|Materials reference is null!|
Error[1101]|Error[1101]|Error[1101]|After changing Billboard settings, press the <b>Regenerate</b> button to apply the changes. Press the <b>Preview</b> button to see the billboard.|
Error[2001]|Error[2001]|Error[2001]|GPUI prototypes can not have LOD Group component on child GameObjects.|
Error[2002]|Error[2002]|Error[2002]|One or more LODs on the LOD Group component do not have any Mesh Renderers.|
Error[2003]|Error[2003]|Error[2003]|Prefab does not have any Mesh Renderers.|
Error[2004]|Error[2004]|Error[2004]|One or more renderers are missing material references.|
Error[2005]|Error[2005]|Error[2005]|One or more renderers are missing mesh references.|
Error[2006]|Error[2006]|Error[2006]|One or more renderers are missing shader references.|
Error[2007]|Error[2007]|Error[2007]|Can not automatically add procedural GPU instancing setup to shader. Please see shader setup documentation for detailed information.|https://wiki.gurbu.com/index.php?title=GPU_Instancer_Pro:GettingStarted#Shader_Setup_Guide
isGenerateShaderVariantCollection|Generate Shader Variant Collection|If enabled, a ShaderVariantCollection with reference to shaders that are used in GPUI Managers will be generated automatically inside Resources folder. This will add the GPUI shader variants automatically to your builds. These shader variants are required for GPUI to work in your builds.|If enabled, a ShaderVariantCollection with reference to shaders that are used in GPUI Managers will be generated automatically inside Resources folder. This will add the GPUI shader variants automatically to your builds. These shader variants are required for GPUI to work in your builds.|
isAutoShaderConversion|Auto. Shader Conversion|If enabled, shaders of the prefabs that are added to the GPUI Managers will be automatically converted to support GPU Instancer.|If enabled, shaders of the prefabs that are added to the GPUI Managers will be automatically converted to support GPU Instancer.|
renderPipeline|Render Pipeline|Currently active render pipeline setting for GPUI.|Currently active render pipeline setting for GPUI.|
cameras|Cameras|List of cameras that will be used for visibility calculations.|List of cameras that will be used for visibility calculations.|
bounds|Bounds|Bounding box encapsulating the rendering objects.|Bounding box encapsulating the rendering objects.|
profile|Profile|<b>Profile</b> contains settings related to culling and LOD calculations. All active profile settings are uploaded to a GPU buffer at runtime.|<b>Profile</b> contains settings related to culling and LOD calculations. All active profile settings are uploaded to a GPU buffer at runtime.|
shaderInstances|Shader Instances|||
prototypeMesh|Mesh|||
prototypeMaterials|Materials|||
layer|Layer|||
prefabObject|Prefab Object|||
gpuiLODGroupData|LOD Group Data|GPU Instancer LOD Group Data contains information related to the meshes and materials for each LOD.|GPU Instancer LOD Group Data contains information related to the meshes and materials for each LOD.|
isDontDestroyOnLoad|Dont Destroy On Load|When enabled, the GPUI Manager will not be destroyed when loading a new Scene.|When enabled, the GPUI Manager will not be destroyed when loading a new Scene.|https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html
isShadowCasting|Is Shadow Casting|<b>Is Shadow Casting</b> specifies whether the object will cast shadows or not. Enabling shadow casting requires extra shadow passes, resulting in additional rendering operations. GPU Instancer implements various techniques to optimize these operations, but disabling shadow casting when unnecessary can enhance performance.|<b>Is Shadow Casting</b> specifies whether the object will cast shadows or not. Enabling shadow casting requires extra shadow passes, resulting in additional rendering operations. GPU Instancer implements various techniques to optimize these operations, but disabling shadow casting when unnecessary can enhance performance.|
isDistanceCulling|Is Distance Culling|When <b>Distance Culling</b> is enabled, you can specify minimum and maximum distance values. Objects beyond these distances will be culled.|When <b>Distance Culling</b> is enabled, you can specify minimum and maximum distance values. Objects beyond these distances will be culled.|
isFrustumCulling|Is Frustum Culling|<b>Is Frustum Culling</b> determines whether objects outside the camera's view frustum will be rendered. When enabled, GPU Instancer will exclude objects outside the frustum from rendering, enhancing performance. It's advisable to enable frustum culling unless there's a specific reason not to.|<b>Is Frustum Culling</b> determines whether objects outside the camera's view frustum will be rendered. When enabled, GPU Instancer will exclude objects outside the frustum from rendering, enhancing performance. It's advisable to enable frustum culling unless there's a specific reason not to.|
isOcclusionCulling|Is Occlusion Culling|<b>Is Occlusion Culling</b> determines whether objects occluded by other objects will be rendered. When enabled, GPU Instancer will skip rendering objects that are behind others and would not normally be visible. While occlusion culling adds some additional GPU operations, it's recommended to enable it when beneficial.|<b>Is Occlusion Culling</b> determines whether objects occluded by other objects will be rendered. When enabled, GPU Instancer will skip rendering objects that are behind others and would not normally be visible. While occlusion culling adds some additional GPU operations, it's recommended to enable it when beneficial.|
minCullingDistance|Min Culling Distance|<b>Min. Culling Distance</b> defines the minimum distance that any kind of culling will occur. If it is a value higher than 0, the instances with a distance less than the specified value to the Camera will not be culled.|<b>Min. Culling Distance</b> defines the minimum distance that any kind of culling will occur. If it is a value higher than 0, the instances with a distance less than the specified value to the Camera will not be culled.|
minMaxDistance|Min Max Distance|||
frustumOffset|Frustum Offset|<b>Frustum Offset</b> expands the camera frustum planes, affecting the area within which objects are rendered when frustum culling is enabled.|<b>Frustum Offset</b> expands the camera frustum planes, affecting the area within which objects are rendered when frustum culling is enabled.|
occlusionOffset|Occlusion Offset|<b>Occlusion Offset</b> defines the depth value (ranged between 0 to 1) that the differences will be discarded while calculating culled objects from the depth texture. Higher offset values will result in less culling.|<b>Occlusion Offset</b> defines the depth value (ranged between 0 to 1) that the differences will be discarded while calculating culled objects from the depth texture. Higher offset values will result in less culling.|
occlusionAccuracy|Occlusion Accuracy|<b>Occlusion Cull Accuracy</b> defines the accuracy of the occlusion culling. Higher values will result in more accurate culling with higher number of texture samples.|<b>Occlusion Cull Accuracy</b> defines the accuracy of the occlusion culling. Higher values will result in more accurate culling with higher number of texture samples.\n1 => 5 samples (middle point and corner points)\n2 => 9 samples (adds 1/4 points)\n3 => 17 samples (adds 1/8 and 3/8 points)|
boundsOffset|Bounds Offset|<b>Bounds Offset</b> can be used to increase the bounding box size of the prototype. This will affect the culling and LOD calculations. It is particularly useful for prototypes with shaders that modify vertex positions.|<b>Bounds Offset</b> can be used to increase the bounding box size of the prototype. This will affect the culling and LOD calculations. It is particularly useful for prototypes with shaders that modify vertex positions.|
lodBiasAdjustment|LOD Bias Adjustment|The <b>LOD Bias Adjustment</b> value effects the LOD level distances per prototype. When it is set to a value less than 1, it favors less detail. A value of more than 1 favors greater detail.|The <b>LOD Bias Adjustment</b> value effects the LOD level distances per prototype. When it is set to a value less than 1, it favors less detail. A value of more than 1 favors greater detail.|
customShadowDistance|Custom Shadow Distance|When <b>Custom Shadow Distance</b> is set to 0, GPU Instancer will use the shadow distance value specified in the Quality Settings for shadow culling. You can adjust this setting to specify a lower or higher value as needed.|When <b>Custom Shadow Distance</b> is set to 0, GPU Instancer will use the shadow distance value specified in the Quality Settings for shadow culling. You can adjust this setting to specify a lower or higher value as needed.|
shadowLODMap|Shadow LOD Map|<b>Shadow LOD Map</b> can be utilized to adjust the level of detail used for rendering shadows for each LOD.|<b>Shadow LOD Map</b> can be utilized to adjust the level of detail used for rendering shadows for each LOD.|
transitionValues|Transition Values|||
mpbDescription|Material Description|Material Description is used for setting the material properties of a texture detail prototype. It sets the properties for Material Property Blocks that are used for rendering, which makes it possible to use a single material for multiple textures.|Material Description is used for setting the material properties of a texture detail prototype. It sets the properties for Material Property Blocks that are used for rendering, which makes it possible to use a single material for multiple textures.|https://wiki.gurbu.com/index.php?title=GPU_Instancer_Pro:GettingStarted#Detail_Material_Description
isLODCrossFade|LOD Cross-fading|<b>LOD Cross-Fade</b> enables cross-fade style blending between the LOD levels of this prototype. This can have a minor impact on performance since during cross-fading, both LOD levels will be rendering.|<b>LOD Cross-Fade</b> enables cross-fade style blending between the LOD levels of this prototype. This can have a minor impact on performance since during cross-fading, both LOD levels will be rendering.|
isGenerateBillboard|Generate Billboard|When <b>Generate Billboard</b> option is enabled, a billboard mesh and material will be created and added as the last LOD to the prototype.|When <b>Generate Billboard</b> option is enabled, a billboard mesh and material will be created and added as the last LOD to the prototype.|
billboardDistance|Billboard Distance|The Billboard Distance value is similar to the LOD percentage setting on the LOD Group component. For example a value of 0.9 is similar to 10% on the LOD Group component.|The Billboard Distance value is similar to the LOD percentage setting on the LOD Group component. For example a value of 0.9 is similar to 10% on the LOD Group component.|
prototypeTypeAndObjects|Prototype Type And Objects|||
runtimeSettings|Runtime Settings|||
prefabID|Prefab ID|||
atlasResolution|Atlas Resolution|<b>Atlas Resolution</b> defines the resolution of the billboard textures. Higher resolutions result in better looking billboards, but use more memory. Texture atlases are not square for 2D billboards; so for example "x2048" option results in a 2048x256 texture resolution.|<b>Atlas Resolution</b> defines the resolution of the billboard textures. Higher resolutions result in better looking billboards, but use more memory. Texture atlases are not square for 2D billboards; so for example "x2048" option results in a 2048x256 texture resolution.|
frameCount|Frame Count|<b>Frame Count</b> defines the total amount of snapshots that are taken from different angles for this billboard. Higher frame counts result in more accurate view differences in different view angles, but result in lower resolution frames since they are all packed in the same atlas.|<b>Frame Count</b> defines the total amount of snapshots that are taken from different angles for this billboard. Higher frame counts result in more accurate view differences in different view angles, but result in lower resolution frames since they are all packed in the same atlas.|
brightness|Brightness|You can use <b>Brightness</b> to adjust the brightness of the billboard textures. A zero value is fully black whereas one is lighter.|You can use <b>Brightness</b> to adjust the brightness of the billboard textures. A zero value is fully black whereas one is lighter.|
cutoffOverride|Cutoff Override|You can use the <b>Cutoff Override</b> option to override the alpha cutoff value of the original materials for the billboard textures. This is normally necessary if you use the alpha value as some other data (e.g. metallic, etc.) in the textures of the material for the prefab of this prototype.|You can use the <b>Cutoff Override</b> option to override the alpha cutoff value of the original materials for the billboard textures. This is normally necessary if you use the alpha value as some other data (e.g. metallic, etc.) in the textures of the material for the prefab of this prototype.|
normalStrength|Normal Strength|<b>Normal Strength</b> controls the intensity of the normal texture effect. Values lower than 1 will decrease it, while higher values will amplify the effect of the normal texture.|<b>Normal Strength</b> controls the intensity of the normal texture effect. Values lower than 1 will decrease it, while higher values will amplify the effect of the normal texture.|
albedoAtlasTexture|Albedo Atlas Texture|||
normalAtlasTexture|Normal Atlas Texture|||
lodCrossFadeTransitionWidth|Transition Width|You can use the <b>Transition Width</b> value to define the cross-fading zone between LOD Levels. This zone is the distance in which the prototype LODs are cross faded. Higher numbers result in wider transition zones. In the transition zone, both LOD levels will be rendered.|You can use the <b>Transition Width</b> value to define the cross-fading zone between LOD Levels. This zone is the distance in which the prototype LODs are cross faded. Higher numbers result in wider transition zones. In the transition zone, both LOD levels will be rendered.|
isAnimateCrossFade|Animate Cross-fading|<b>Animate Cross-Fading</b> animates cross-fading instead of it being distance based. The animation starts with the first occurrence of the changed LOD. During the animation, both LOD levels will be rendered.|<b>Animate Cross-Fading</b> animates cross-fading instead of it being distance based. The animation starts with the first occurrence of the changed LOD. During the animation, both LOD levels will be rendered.|
lodCrossFadeAnimateSpeed|Animate Speed|<b>LOD Cross Fade Animate Speed</b> determines the duration of the transition between different LODs.|<b>LOD Cross Fade Animate Speed</b> determines the duration of the transition between different LODs.|
managerDefaults|Manager Defaults|<b>Manager Defaults</b> list allows users to overwrite the default profile on the GPUI Managers that are used for newly added prototypes.|<b>Manager Defaults</b> list allows users to overwrite the default profile on the GPUI Managers that are used for newly added prototypes.|
isBillboard|Is Billboard|||
prefabTypeWarning|Prefab Type Warning|Only user created prefabs are accepted. Cannot add selected object.|Only user created prefabs are accepted. Cannot add selected object.|
defaultProfile|Default Profile|New prototypes that are added to the Manager will use this profile by default.|New prototypes that are added to the Manager will use this profile by default.|
billboardAssets|Billboard Assets|Assets added to the <b>Billboard Assets</b> list are discoverable to GPUI Managers when creating prototypes at runtime.|Assets added to the <b>Billboard Assets</b> list are discoverable to GPUI Managers when creating prototypes at runtime.|
isEnableDefaultRenderingWhenDisabled|Revert When Disabled|Enable default rendering when the manager is disabled. (E.g. enable MeshRenderers on prefab instances or enable tree/detail rendering on terrain.)|Enable default rendering when the manager is disabled. (E.g. enable MeshRenderers on prefab instances or enable tree/detail rendering on terrain.)|
editor_isRenderInEditMode|Render In Edit Mode|When enabled, the GPUI Manager will render the objects in edit mode.|When enabled, the GPUI Manager will render the objects in edit mode.|
enableOcclusionCulling|Enable Occlusion Culling|This option determines whether depth textures will be generated for this camera, allowing for the utilization of the Occlusion Culling feature.|This option determines whether depth textures will be generated for this camera, allowing for the utilization of the Occlusion Culling feature.|
isEnabled|Enabled|Enables or Disables instanced rendering for this prototype|Enables or Disables instanced rendering for this prototype|
cameraLoadingType|Camera Selection|This setting changes the camera selection behavior based on priority.|This setting changes the camera selection behavior based on priority. The possible selections, ordered by priority, are:\n<b>Default</b> => GPUICamera component, MainCamera tag\n<b>Any</b> => GPUICamera component, MainCamera tag, Camera.allCameras[0]\n<b>GPUICameraComponent</b> => GPUICamera component|
billboardShaderType|Shader Type|||
isBillboardReplaceLODCulled|Replace LOD Culled|When enabled, the billboard will replace the Culled section of the LOD Group component, instead of using a custom distance value.|When enabled, the billboard will replace the Culled section of the LOD Group component, instead of using a custom distance value.|
defaultProfileOverride|Default Profile Override|||
disableShaderBuffers|Disable Shader Buffers|Enabling this option prohibits the use of Graphics Buffers for vertex/fragment shaders. When disabled, GPUI will decide internally depending on the SystemInfo.|Enabling this option prohibits the use of Graphics Buffers for vertex/fragment shaders. When disabled, GPUI will decide internally depending on the SystemInfo.|
gpuiDebuggerWindow|GPUI Debugger Window|The Debugger Window offers insights into draw calls and GPU memory usage, aiding in analysis and debugging. It provides information on the cameras utilized for instanced rendering, statistical data on the currently rendered instances for each camera, and GPU allocations for each prototype. Furthermore, by selecting the GPUILOD Group Data objects for each prototype, users can access details on the meshes, materials, keywords, and LOD settings utilized for draw calls.|The Debugger Window offers insights into draw calls and GPU memory usage, aiding in analysis and debugging. It provides information on the cameras utilized for instanced rendering, statistical data on the currently rendered instances for each camera, and GPU allocations for each prototype. Furthermore, by selecting the GPUILOD Group Data objects for each prototype, users can access details on the meshes, materials, keywords, and LOD settings utilized for draw calls.|
regenerateRenderersButton|Regenerate Renderers|When clicked, the 'Regenerate Renderers' button clears the existing meshes and materials used for rendering, and creates new ones based on the prototype settings. This action might be required if you change material or mesh references in edit mode and want to update the GPUI renderers accordingly.|When clicked, the 'Regenerate Renderers' button clears the existing meshes and materials used for rendering, and creates new ones based on the prototype settings. This action might be required if you change material or mesh references in edit mode and want to update the GPUI renderers accordingly.|
disposeAllButton|Dispose All|When clicked, the 'Dispose All' button clears all rendering data and disposes GPU allocations used by GPUI. Once the renderers are disposed, the GPUI Managers need to be reinitialized for the rendering process to continue.|When clicked, the 'Dispose All' button clears all rendering data and disposes GPU allocations used by GPUI. Once the renderers are disposed, the GPUI Managers need to be reinitialized for the rendering process to continue.|
showVisibilityData|Show Visibility Data|When enabled, the debugger will readback culling results from the GPU and display additional information such as visible LOD counts for each camera.|When enabled, the debugger will readback culling results from the GPU and display additional information such as visible LOD counts for each camera.|
gpuiBillboardGeneratorWindow|GPUI Billboard Generator Window|The Billboard Generator Window is a tool provided by GPUI for testing and fine-tuning settings related to billboards generated by the system. It allows users to adjust parameters such as resolution, frame count, and brightness to achieve the desired visual appearance for billboard rendering.|The Billboard Generator Window is a tool provided by GPUI for testing and fine-tuning settings related to billboards generated by the system. It allows users to adjust parameters such as resolution, frame count, and brightness to achieve the desired visual appearance for billboard rendering.|
gpuiBillboardGeneratorButtons|GPUI Billboard Generator Buttons||Save as Asset: This button saves the billboard settings to a Scriptable Object, along with the generated textures. It allows users to preserve their billboard configurations for future use within GPUI Managers.\n\nSave Standalone: Clicking this button creates a mesh, a material, and a billboard prefab that can be used independently of the GPUI Managers. It provides a way to add the generated billboards as LOD levels to other objects or scenes.|
demoImporterRenderPipeline|Render Pipeline|Currently active render pipeline.|Currently active render pipeline.|
importDemosButton|Import Demos||Click on the 'Import Demos' button to import the demo packages into your project. Note that material and some of the scene files will be overwritten depending on the 'Render Pipeline' selection.\n\nAlternatively you can use the 'Tools -> GPU Instancer Pro -> Import Demos' menu option.|
shaderBindingsInfo|Shader Bindings Info||The Shader Bindings asset stores information about shaders used by prototypes for rendering with GPUI. Shaders lacking GPUIPro shader setup will have an automatically created replacement shader, and its information will be stored in this asset. This data is utilized at runtime to determine which shader to use for instanced rendering.\n\nEven though the inspector displays references to the shader files, internally, this asset only serializes the shader names. As a result, the shaders listed here will not be included in your builds due to this file.|
regenerateBillboardsButton|Regenerate Billboards|<b>Regenerate Billboards</b> button recreates the billboard textures for all prototypes based on their current billboard settings.|<b>Regenerate Billboards</b> button recreates the billboard textures for all prototypes based on their current billboard settings.|
shadowFrustumOffset|Shadow Frustum Offset|<b>Shadow Frustum Offset</b> expands the camera frustum planes, affecting the area within which shadows are rendered when frustum culling is enabled.|<b>Shadow Frustum Offset</b> expands the camera frustum planes, affecting the area within which shadows are rendered when frustum culling is enabled.|
shadowOcclusionOffset|Shadow Occlusion Offset|<b>Shadow Occlusion Offset</b> defines the depth value (ranged between 0 to 1) that the differences will be discarded while calculating culled shadows from the depth texture. Higher offset values will result in less shadow culling.|<b>Shadow Occlusion Offset</b> defines the depth value (ranged between 0 to 1) that the differences will be discarded while calculating culled shadows from the depth texture. Higher offset values will result in less shadow culling.|
minShadowCullingDistance|Min Shadow Culling Distance|<b>Min. Shadow Culling Distance</b> defines the minimum distance that any kind of shadow culling will occur. If it is a value higher than 0, the shadows with a distance less than the specified value to the Camera will not be culled.|<b>Min. Shadow Culling Distance</b> defines the minimum distance that any kind of shadow culling will occur. If it is a value higher than 0, the shadows with a distance less than the specified value to the Camera will not be culled.|
instancingBoundsSize|Instancing Bounds Size|Defines world space bounds for the geometry. Used to cull and sort the rendered geometry.|Defines world space bounds for the geometry. Used to cull and sort the rendered geometry.|
isShadowDistanceCulling|Is Distance Culling|Shadow distance culling is based on the shadow caster position. In situations with very long shadows, shadow distance culling may result in less consistent shadows. In such cases, it's generally better to increase the <b>Custom Shadow Distance</b> value. However, if necessary, this option allows you to disable shadow distance culling altogether.|Shadow distance culling is based on the shadow caster position. In situations with very long shadows, shadow distance culling may result in less consistent shadows. In such cases, it's generally better to increase the <b>Custom Shadow Distance</b> value. However, if necessary, this option allows you to disable shadow distance culling altogether.|
isShadowFrustumCulling|Is Frustum Culling|If enabled, frustum culling results will be applied to the shadows. This will result in more performance, but might also lead to less consistency in shadows.|If enabled, frustum culling results will be applied to the shadows. This will result in more performance, but might also lead to less consistency in shadows.|
isShadowOcclusionCulling|Is Occlusion Culling|If enabled, occlusion culling results will be applied to the shadows. This will result in more performance, but might also lead to less consistency in shadows.|If enabled, occlusion culling results will be applied to the shadows. This will result in more performance, but might also lead to less consistency in shadows.|
gpuiDebuggerCameras|GPUI Debugger Cameras|The <b>Cameras</b> list displays all the cameras used for indirect rendering and includes statistical information such as draw call counts and total buffer size. When the <b>Visibility</b> option is enabled, the culling results will also be shown, along with estimated vertex counts. The <b>Scene</b> toggle determines whether the objects visible to this camera will be shown in the Scene View.|The <b>Cameras</b> list displays all the cameras used for indirect rendering and includes statistical information such as draw call counts and total buffer size.\nWhen the <b>Visibility</b> option is enabled, the culling results will also be shown, along with estimated vertex counts.\nThe <b>Scene</b> toggle determines whether the objects visible to this camera will be shown in the Scene View.|
gpuiDebuggerPrototypes|GPUI Debugger Prototypes|The Render Groups display the GPUILOD Group Data objects, along with the buffer size and instance counts for each prototype. Additionally, you can see the sources for each renderer and their renderer key values.|The Render Groups display the GPUILOD Group Data objects, along with the buffer size and instance counts for each prototype. Additionally, you can see the sources for each renderer and their renderer key values.|
defaultHDRPShadowDistance|Default HDRP Shadow Distance|||
runtimeSettingsOverwrite|Runtime Settings|||
loadShadersFromAddressables|Addressables Shader Loading|||
loadResourcesFromAddressables|Addressables Resource Loading|||
experimental|Experimental|||
enableMotionVectors|Enable Motion Vectors|||
editor_isRollbackRuntimeProfileChanges|Rollback Runtime Profile Changes|When enabled, changes made to the profiles in play mode will be discarded when exiting play mode.|When enabled, changes made to the profiles in play mode will be discarded when exiting play mode.|
occlusionCullingCondition|Occlusion Culling Condition|Occlusion Culling Condition setting can be used to disable the occlusion culling feature project-wide, avoiding depth texture generation and additional visibility calculations. This might be beneficial for projects where occlusion culling is unnecessary or too expensive.|Occlusion Culling Condition setting can be used to disable the occlusion culling feature project-wide, avoiding depth texture generation and additional visibility calculations. This might be beneficial for projects where occlusion culling is unnecessary or too expensive.|
dynamicOcclusionOffsetIntensity|Dynamic Offset Intensity|Hi-Z Occlusion Culling uses the depth texture from the previous frame to determine which objects are culled. Based on the camera's position and rotation differences from the previous frame, GPUI increases the occlusion culling offset value to prevent incorrect culling. The 'Dynamic O.C. Offset Intensity' value is a multiplier for the resulting dynamic offset value. If it is set to 0, this feature will be disabled, and higher values will increase the intensity of the dynamic offset.|Hi-Z Occlusion Culling uses the depth texture from the previous frame to determine which objects are culled. Based on the camera's position and rotation differences from the previous frame, GPUI increases the occlusion culling offset value to prevent incorrect culling. The 'Dynamic O.C. Offset Intensity' value is a multiplier for the resulting dynamic offset value. If it is set to 0, this feature will be disabled, and higher values will increase the intensity of the dynamic offset.|
occlusionCullingMode|Occlusion Culling Mode|The Occlusion Culling Mode determines how the Depth texture for HiZ Occlusion culling will be obtained.|The Occlusion Culling Mode determines how the Depth texture for HiZ Occlusion culling will be obtained.|
maximumLODLevel|Maximum LOD Level|The <b>Maximum LOD Level</b> setting determines the highest LOD used for rendering. The effective LOD level will be the greater of this setting or the Maximum LOD Level specified in <b>Quality Settings</b>. To apply this setting project-wide, adjust it in <b>Quality Settings</b>. For individual prototypes, you can modify the <b>Profile</b> setting.|The <b>Maximum LOD Level</b> setting determines the highest LOD used for rendering. The effective LOD level will be the greater of this setting or the Maximum LOD Level specified in <b>Quality Settings</b>. To apply this setting project-wide, adjust it in <b>Quality Settings</b>. For individual prototypes, you can modify the <b>Profile</b> setting.|
stripDOTSInstancingVariants|Strip DOTS Shader Variants|Exclude shader variants with both DOTS instancing and procedural instancing keywords from builds.|Exclude shader variants with both DOTS instancing and procedural instancing keywords from builds.|
