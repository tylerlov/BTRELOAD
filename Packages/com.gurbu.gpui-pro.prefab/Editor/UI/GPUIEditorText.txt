isFindInstancesAtInitialization|Find Instances At Start|When enabled, the Prefab Manager will search for GPUIPrefab components in the scene during initialization. When disabled, you can manually register the prefab instances in the scene, using the Register Instances In Scene button.|When enabled, the Prefab Manager will search for GPUIPrefab components in the scene during initialization. When disabled, you can manually register the prefab instances in the scene, using the Register Instances In Scene button.|
isAutoUpdateTransformData|Transform Updates|When enabled, the transform data of the prefab instances will be read and uploaded to a GPU buffer every frame. \n\nIf the prefab instances are not changing their transform data, it is better to keep it disabled.\n\nIf there are rarely changes, you can use the <b>GPUIPrefabAPI.UpdateTransformData</b> method to notify the Prefab Manager about the changes while keeping this setting disabled.|When enabled, the transform data of the prefab instances will be read and uploaded to a GPU buffer every frame. \n\nIf the prefab instances are not changing their transform data, it is better to keep it disabled.\n\nIf there are rarely changes, you can use the <b>GPUIPrefabAPI.UpdateTransformData</b> method to notify the Prefab Manager about the changes while keeping this setting disabled.|
isAutoAddRemove|Auto. Add/Remove|When enabled, <b>GPUIPrefabAutoAddRemove</b> component will be added to the prefab. The instances containing this component will be automatically added to or removed from the Prefab Manager.|When enabled, <b>GPUIPrefabAutoAddRemove</b> component will be added to the prefab. The instances containing this component will be automatically added to or removed from the Prefab Manager.|
disableDefaultRenderersWarning|Disable Default Renderers||This action will disable all the Mesh Renderers and LOD Groups in this prefab.\n\nDisabling these components will accelerate initialization operations on the Prefab Manager, as GPUI won't need to loop through prefab instances to disable them at runtime. However, keep in mind that these objects will only be visible during play mode while the Prefab Manager is active and running. You can use this button again to enable the Mesh Renderers, but it's recommended to do so after you've finished your scene design. Once enabled, refrain from manually toggling these components on the prefab or its instances.\n\nAre you sure you want to Disable Default Renderers?|
materialVariations|Material Variations|<b>+Create Button:</b> Clicking this button creates a Material Variation Definition asset and adds the GPUI Material Variation Instance component to the prefab.\n\n<b>Enable/Disable Checkbox:</b> Use this checkbox to enable or disable the material variation.\n\n<b>Material Variation Definition:</b> This field displays the Material Variation Definition Scriptable Object. Refer to the Material Variation Definition documentation for setup instructions.\n\n<b>Remove Button:</b> Clicking this button removes the GPUI Material Variation Instance component from the prefab and optionally deletes the Material Variation Definition asset.|<b>+Create Button:</b> Clicking this button creates a Material Variation Definition asset and adds the GPUI Material Variation Instance component to the prefab.\n\n<b>Enable/Disable Checkbox:</b> Use this checkbox to enable or disable the material variation.\n\n<b>Material Variation Definition:</b> This field displays the Material Variation Definition Scriptable Object. Refer to the Material Variation Definition documentation for setup instructions.\n\n<b>Remove Button:</b> Clicking this button removes the GPUI Material Variation Instance component from the prefab and optionally deletes the Material Variation Definition asset.|https://wiki.gurbu.com/index.php?title=GPU_Instancer_Pro:BestPractices#Prefab_Manager_Material_Variations
variationDefinition|Variation Definition|||
materialVariationDefinition|Material Variation Definition||1- Select the <b>Material</b> that will have its properties changed per instance.\n2- Set a unique <b>Buffer Name</b> for the StructuredBuffer that will be used in the shader.\n3- Click on the <b>Add Property</b> button.\n4- From the drop drop-down on the left, select the material property you wish to change. If you wish to change a custom variable defined inside the shader, select <Custom> instead and write the name of the variable.\n5- From the drop-down menu on the right, select the property type such as Vector4, Color, Integer, or Float.\n6- Click on the <b>Generate Shader</b> button to create a new shader with material variations support based on the settings. |
